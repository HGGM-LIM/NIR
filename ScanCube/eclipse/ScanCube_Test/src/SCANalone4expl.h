//-----------------------------------------------------------------------------
//  File: SCANalone4expl.h                        Copyright (c) 2016 SCANLAB AG
//-----------------------------------------------------------------------------
//
//
//
//  Abstract
//      SCANalone4 function prototypes for explicitly linking - also known as
//      dynamic load linking - to the SCANalone4.DLL or SCANalone4x64.DLL.
//
//  Authors
//      Gerald Schmid, Bernhard Schrems, Christian Lutz
//
//  Revision History
//      +-----+---------+--------+------------------------------------------+
//      | Mod |  Date   | Author | Description                              |
//      +-----+---------+--------+------------------------------------------+
//      | 0.0 | 15Jan01 | GS, BS | * initial release                        |
//      | 0.3 | 18Jun15 |  CLU   | * include guard                          |
//      | 0.4 | 15Dec15 | BS,CLU | * 64bit compatibility                    |
//      |     |         |        |                                          |
//      +-----+---------+--------+------------------------------------------+
//
//      This file was automatically generated on Jan 20, 2016.
//
//-----------------------------------------------------------------------------

//------------------------ DLL Handling ---------------------------------------

#pragma once

int SCANalone4open(void);
void SCANalone4close(void);

typedef unsigned short (__stdcall *SCANALONE_COUNT_CARDS_FP)(void);
typedef void (__stdcall *SELECT_RTC_FP)(unsigned short n);
typedef long (__stdcall *N_USB_STATUS_FP)(unsigned short n);
typedef long (__stdcall *USB_STATUS_FP)(void);
typedef short (__stdcall *N_LOAD_CORRECTION_FILE_FP)(unsigned short n, const char* filename, short cortable, double kx, double ky, double phi, double xoffset, double yoffset);
typedef short (__stdcall *LOAD_CORRECTION_FILE_FP)(const char* filename, short cortable, double kx, double ky, double phi, double xoffset, double yoffset);
typedef short (__stdcall *N_LOAD_COR_FP)(unsigned short n, const char* filename);
typedef short (__stdcall *LOAD_COR_FP)(const char* filename);
typedef short (__stdcall *N_LOAD_PROGRAM_FILE_FP)(unsigned short n, const char* name);
typedef short (__stdcall *LOAD_PROGRAM_FILE_FP)(const char* name);
typedef short (__stdcall *N_LOAD_PRO_FP)(unsigned short n, const char* filename);
typedef short (__stdcall *LOAD_PRO_FP)(const char* filename);
typedef short (__stdcall *N_LOAD_VARPOLYDELAY_FP)(unsigned short n, const char* stbfilename, unsigned short tableno);
typedef short (__stdcall *LOAD_VARPOLYDELAY_FP)(const char* stbfilename, unsigned short tableno);
typedef short (__stdcall *N_LOAD_Z_TABLE_FP)(unsigned short n, double a, double b, double c);
typedef short (__stdcall *LOAD_Z_TABLE_FP)(double a, double b, double c);
typedef void (__stdcall *N_GET_WAVEFORM_FP)(unsigned short n, unsigned short channel, unsigned short stopp, signed short *memptr);
typedef void (__stdcall *GET_WAVEFORM_FP)(unsigned short channel, unsigned short stopp, signed short *memptr);
typedef void (__stdcall *N_GET_STATUS_FP)(unsigned short n, unsigned short *busy, long *position);
typedef void (__stdcall *GET_STATUS_FP)(unsigned short *busy, long *position);
typedef unsigned short (__stdcall *N_READ_STATUS_FP)(unsigned short n);
typedef unsigned short (__stdcall *READ_STATUS_FP)(void);
typedef unsigned short (__stdcall *GET_DLL_VERSION_FP)(void);
typedef long (__stdcall *N_GET_INPUT_POINTER_FP)(unsigned short n);
typedef long (__stdcall *GET_INPUT_POINTER_FP)(void);
typedef void (__stdcall *N_SET_INPUT_POINTER_FP)(unsigned short n, long pointer);
typedef void (__stdcall *SET_INPUT_POINTER_FP)(long pointer);
typedef void (__stdcall *N_SET_START_LIST_1_FP)(unsigned short n);
typedef void (__stdcall *SET_START_LIST_1_FP)(void);
typedef void (__stdcall *N_SET_START_LIST_2_FP)(unsigned short n);
typedef void (__stdcall *SET_START_LIST_2_FP)(void);
typedef void (__stdcall *N_SET_START_LIST_FP)(unsigned short n, unsigned short listno);
typedef void (__stdcall *SET_START_LIST_FP)(unsigned short listno);
typedef void (__stdcall *N_EXECUTE_LIST_1_FP)(unsigned short n);
typedef void (__stdcall *EXECUTE_LIST_1_FP)(void);
typedef void (__stdcall *N_EXECUTE_LIST_2_FP)(unsigned short n);
typedef void (__stdcall *EXECUTE_LIST_2_FP)(void);
typedef void (__stdcall *N_EXECUTE_LIST_FP)(unsigned short n, unsigned short listno);
typedef void (__stdcall *EXECUTE_LIST_FP)(unsigned short listno);
typedef void (__stdcall *N_WRITE_8BIT_PORT_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_8BIT_PORT_FP)(unsigned short value);
typedef void (__stdcall *N_WRITE_IO_PORT_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_IO_PORT_FP)(unsigned short value);
typedef void (__stdcall *N_AUTO_CHANGE_FP)(unsigned short n);
typedef void (__stdcall *AUTO_CHANGE_FP)(void);
typedef void (__stdcall *N_AUT_CHANGE_FP)(unsigned short n);
typedef void (__stdcall *AUT_CHANGE_FP)(void);
typedef void (__stdcall *N_START_LOOP_FP)(unsigned short n);
typedef void (__stdcall *START_LOOP_FP)(void);
typedef void (__stdcall *N_QUIT_LOOP_FP)(unsigned short n);
typedef void (__stdcall *QUIT_LOOP_FP)(void);
typedef void (__stdcall *N_STOP_EXECUTION_FP)(unsigned short n);
typedef void (__stdcall *STOP_EXECUTION_FP)(void);
typedef void (__stdcall *N_DSP_START_FP)(unsigned short n);
typedef void (__stdcall *DSP_START_FP)(void);
typedef unsigned short (__stdcall *N_READ_IO_PORT_FP)(unsigned short n);
typedef unsigned short (__stdcall *READ_IO_PORT_FP)(void);
typedef void (__stdcall *N_WRITE_DA_1_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_DA_1_FP)(unsigned short value);
typedef void (__stdcall *N_WRITE_DA_2_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_DA_2_FP)(unsigned short value);
typedef void (__stdcall *N_WRITE_DA_X_FP)(unsigned short n, unsigned short x, unsigned short value);
typedef void (__stdcall *WRITE_DA_X_FP)(unsigned short x, unsigned short value);
typedef void (__stdcall *N_SET_MAX_COUNTS_FP)(unsigned short n, long counts);
typedef void (__stdcall *SET_MAX_COUNTS_FP)(long counts);
typedef long (__stdcall *N_GET_COUNTS_FP)(unsigned short n);
typedef long (__stdcall *GET_COUNTS_FP)(void);
typedef void (__stdcall *N_SET_MATRIX_FP)(unsigned short n, double m11, double m12, double m21, double m22);
typedef void (__stdcall *SET_MATRIX_FP)(double m11, double m12, double m21, double m22);
typedef void (__stdcall *N_SET_OFFSET_FP)(unsigned short n, short xoffset, short yoffset);
typedef void (__stdcall *SET_OFFSET_FP)(short xoffset, short yoffset);
typedef void (__stdcall *N_GOTO_XY_FP)(unsigned short n, short x, short y);
typedef void (__stdcall *GOTO_XY_FP)(short x, short y);
typedef void (__stdcall *N_GOTO_XYZ_FP)(unsigned short n, short x, short y, short z);
typedef void (__stdcall *GOTO_XYZ_FP)(short x, short y, short z);
typedef unsigned short (__stdcall *N_GET_HEX_VERSION_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_HEX_VERSION_FP)(void);
typedef void (__stdcall *N_ENABLE_LASER_FP)(unsigned short n);
typedef void (__stdcall *ENABLE_LASER_FP)(void);
typedef void (__stdcall *N_DISABLE_LASER_FP)(unsigned short n);
typedef void (__stdcall *DISABLE_LASER_FP)(void);
typedef void (__stdcall *N_STOP_LIST_FP)(unsigned short n);
typedef void (__stdcall *STOP_LIST_FP)(void);
typedef void (__stdcall *N_RESTART_LIST_FP)(unsigned short n);
typedef void (__stdcall *RESTART_LIST_FP)(void);
typedef unsigned short (__stdcall *N_GET_RTC_VERSION_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_RTC_VERSION_FP)(void);
typedef void (__stdcall *N_GET_XY_POS_FP)(unsigned short n, short *x, short *y);
typedef void (__stdcall *GET_XY_POS_FP)(short *x, short *y);
typedef void (__stdcall *N_GET_XYZ_POS_FP)(unsigned short n, short *x, short *y, short *z);
typedef void (__stdcall *GET_XYZ_POS_FP)(short *x, short *y, short *z);
typedef void (__stdcall *N_SELECT_LIST_FP)(unsigned short n, unsigned short list_2);
typedef void (__stdcall *SELECT_LIST_FP)(unsigned short list_2);
typedef void (__stdcall *N_SET_EXTSTARTPOS_FP)(unsigned short n, long position);
typedef void (__stdcall *SET_EXTSTARTPOS_FP)(long position);
typedef void (__stdcall *N_Z_OUT_FP)(unsigned short n, short z);
typedef void (__stdcall *Z_OUT_FP)(short z);
typedef void (__stdcall *N_SET_FIRSTPULSE_KILLER_FP)(unsigned short n, unsigned short fpk);
typedef void (__stdcall *SET_FIRSTPULSE_KILLER_FP)(unsigned short fpk);
typedef void (__stdcall *N_SET_STANDBY_FP)(unsigned short n, unsigned short half_period, unsigned short pulse);
typedef void (__stdcall *SET_STANDBY_FP)(unsigned short half_period, unsigned short pulse);
typedef void (__stdcall *N_LASER_SIGNAL_ON_FP)(unsigned short n);
typedef void (__stdcall *LASER_SIGNAL_ON_FP)(void);
typedef void (__stdcall *N_LASER_SIGNAL_OFF_FP)(unsigned short n);
typedef void (__stdcall *LASER_SIGNAL_OFF_FP)(void);
typedef void (__stdcall *N_SET_DELAY_MODE_FP)(unsigned short n, unsigned short varpoly, unsigned short directmove3d, unsigned short edgelevel, unsigned short minjumpdelay, unsigned short jumplengthlimit);
typedef void (__stdcall *SET_DELAY_MODE_FP)(unsigned short varpoly, unsigned short directmove3d, unsigned short edgelevel, unsigned short minjumpdelay, unsigned short jumplengthlimit);
typedef void (__stdcall *N_SET_PISO_CONTROL_FP)(unsigned short n, unsigned short l1, unsigned short l2);
typedef void (__stdcall *SET_PISO_CONTROL_FP)(unsigned short l1, unsigned short l2);
typedef void (__stdcall *N_SELECT_STATUS_FP)(unsigned short n, unsigned short mode);
typedef void (__stdcall *SELECT_STATUS_FP)(unsigned short mode);
typedef void (__stdcall *N_GET_ENCODER_FP)(unsigned short n, short *zx, short *zy);
typedef void (__stdcall *GET_ENCODER_FP)(short *zx, short *zy);
typedef void (__stdcall *N_SELECT_COR_TABLE_FP)(unsigned short n, unsigned short heada, unsigned short headb);
typedef void (__stdcall *SELECT_COR_TABLE_FP)(unsigned short heada, unsigned short headb);
typedef void (__stdcall *N_EXECUTE_AT_POINTER_FP)(unsigned short n, long position);
typedef void (__stdcall *EXECUTE_AT_POINTER_FP)(long position);
typedef unsigned short (__stdcall *N_GET_HEAD_STATUS_FP)(unsigned short n, unsigned short head);
typedef unsigned short (__stdcall *GET_HEAD_STATUS_FP)(unsigned short head);
typedef void (__stdcall *N_SIMULATE_ENCODER_FP)(unsigned short n, unsigned short channel);
typedef void (__stdcall *SIMULATE_ENCODER_FP)(unsigned short channel);
typedef void (__stdcall *N_RELEASE_WAIT_FP)(unsigned short n);
typedef void (__stdcall *RELEASE_WAIT_FP)(void);
typedef unsigned short (__stdcall *N_GET_WAIT_STATUS_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_WAIT_STATUS_FP)(void);
typedef void (__stdcall *N_SET_CONTROL_MODE_FP)(unsigned short n, unsigned short mode);
typedef void (__stdcall *SET_CONTROL_MODE_FP)(unsigned short mode);
typedef void (__stdcall *N_SET_LASER_MODE_FP)(unsigned short n, unsigned short mode);
typedef void (__stdcall *SET_LASER_MODE_FP)(unsigned short mode);
typedef void (__stdcall *N_SET_EXT_START_DELAY_FP)(unsigned short n, short delay, short encoder);
typedef void (__stdcall *SET_EXT_START_DELAY_FP)(short delay, short encoder);
typedef void (__stdcall *N_HOME_POSITION_FP)(unsigned short n, short xhome, short yhome);
typedef void (__stdcall *HOME_POSITION_FP)(short xhome, short yhome);
typedef unsigned short (__stdcall *N_READ_AD_X_FP)(unsigned short n, unsigned short x);
typedef unsigned short (__stdcall *READ_AD_X_FP)(unsigned short x);
typedef short (__stdcall *N_GET_Z_DISTANCE_FP)(unsigned short n, short x, short y, short z);
typedef short (__stdcall *GET_Z_DISTANCE_FP)(short x, short y, short z);
typedef unsigned short (__stdcall *N_GET_STARTSTOP_INFO_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_STARTSTOP_INFO_FP)(void);
typedef unsigned short (__stdcall *N_GET_MARKING_INFO_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_MARKING_INFO_FP)(void);
typedef unsigned short (__stdcall *N_GET_IO_STATUS_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_IO_STATUS_FP)(void);
typedef double (__stdcall *N_GET_TIME_FP)(unsigned short n);
typedef double (__stdcall *GET_TIME_FP)(void);
typedef void (__stdcall *N_SET_DEFOCUS_FP)(unsigned short n, short value);
typedef void (__stdcall *SET_DEFOCUS_FP)(short value);
typedef void (__stdcall *N_SET_SOFTSTART_MODE_FP)(unsigned short n, unsigned short mode, unsigned short number, unsigned short restartdelay);
typedef void (__stdcall *SET_SOFTSTART_MODE_FP)(unsigned short mode, unsigned short number, unsigned short restartdelay);
typedef void (__stdcall *N_SET_SOFTSTART_LEVEL_FP)(unsigned short n, unsigned short index, unsigned short level);
typedef void (__stdcall *SET_SOFTSTART_LEVEL_FP)(unsigned short index, unsigned short level);
typedef void (__stdcall *N_CONTROL_COMMAND_FP)(unsigned short n, unsigned short head, unsigned short axis, unsigned short data);
typedef void (__stdcall *CONTROL_COMMAND_FP)(unsigned short head, unsigned short axis, unsigned short data);
typedef void (__stdcall *N_SET_ROT_CENTER_FP)(unsigned short n, long center_x, long center_y);
typedef void (__stdcall *SET_ROT_CENTER_FP)(long center_x, long center_y);
typedef void (__stdcall *N_AUTO_CHANGE_POS_FP)(unsigned short n, long start);
typedef void (__stdcall *AUTO_CHANGE_POS_FP)(long start);
typedef short (__stdcall *N_GET_VALUE_FP)(unsigned short n, unsigned short signal);
typedef short (__stdcall *GET_VALUE_FP)(unsigned short signal);
typedef void (__stdcall *N_SET_IO_BIT_FP)(unsigned short n, unsigned short mask1);
typedef void (__stdcall *SET_IO_BIT_FP)(unsigned short mask1);
typedef void (__stdcall *N_CLEAR_IO_BIT_FP)(unsigned short n, unsigned short mask0);
typedef void (__stdcall *CLEAR_IO_BIT_FP)(unsigned short mask0);
typedef void (__stdcall *N_SET_DUTY_CYCLE_TABLE_FP)(unsigned short n, unsigned short index, unsigned short dutycycle);
typedef void (__stdcall *SET_DUTY_CYCLE_TABLE_FP)(unsigned short index, unsigned short dutycycle);
typedef short (__stdcall *N_STORE_ON_MMC_FP)(unsigned short n);
typedef short (__stdcall *STORE_ON_MMC_FP)(void);
typedef unsigned short (__stdcall *N_GET_SERIAL_NUMBER_FP)(unsigned short n);
typedef unsigned short (__stdcall *GET_SERIAL_NUMBER_FP)(void);
typedef long (__stdcall *N_GET_SERIAL_NUMBER_32_FP)(unsigned short n);
typedef long (__stdcall *GET_SERIAL_NUMBER_32_FP)(void);
typedef void (__stdcall *N_MEASUREMENT_STATUS_FP)(unsigned short n, unsigned short *busy, unsigned short *position);
typedef void (__stdcall *MEASUREMENT_STATUS_FP)(unsigned short *busy, unsigned short *position);
typedef void (__stdcall *N_CLEAR_LIST_FP)(unsigned short n);
typedef void (__stdcall *CLEAR_LIST_FP)(void);
typedef void (__stdcall *N_SET_CHAR_TABLE_FP)(unsigned short n, unsigned short ch, long listpos);
typedef void (__stdcall *SET_CHAR_TABLE_FP)(unsigned short ch, long listpos);
typedef void (__stdcall *N_TIME_UPDATE_FP)(unsigned short n);
typedef void (__stdcall *TIME_UPDATE_FP)(void);
typedef void (__stdcall *N_SET_SERIAL_FP)(unsigned short n, long no);
typedef void (__stdcall *SET_SERIAL_FP)(long no);
typedef long (__stdcall *N_MEMORY_TEST_FP)(unsigned short n);
typedef long (__stdcall *MEMORY_TEST_FP)(void);
typedef void (__stdcall *N_LIST_NOP_FP)(unsigned short n);
typedef void (__stdcall *LIST_NOP_FP)(void);
typedef void (__stdcall *N_SET_END_OF_LIST_FP)(unsigned short n);
typedef void (__stdcall *SET_END_OF_LIST_FP)(void);
typedef void (__stdcall *N_JUMP_ABS_FP)(unsigned short n, short x, short y);
typedef void (__stdcall *JUMP_ABS_FP)(short x, short y);
typedef void (__stdcall *N_JUMP_ABS_3D_FP)(unsigned short n, short x, short y, short z);
typedef void (__stdcall *JUMP_ABS_3D_FP)(short x, short y, short z);
typedef void (__stdcall *N_MARK_ABS_FP)(unsigned short n, short x, short y);
typedef void (__stdcall *MARK_ABS_FP)(short x, short y);
typedef void (__stdcall *N_MARK_ABS_3D_FP)(unsigned short n, short x, short y, short z);
typedef void (__stdcall *MARK_ABS_3D_FP)(short x, short y, short z);
typedef void (__stdcall *N_JUMP_REL_FP)(unsigned short n, short dx, short dy);
typedef void (__stdcall *JUMP_REL_FP)(short dx, short dy);
typedef void (__stdcall *N_JUMP_REL_3D_FP)(unsigned short n, short dx, short dy, short dz);
typedef void (__stdcall *JUMP_REL_3D_FP)(short dx, short dy, short dz);
typedef void (__stdcall *N_MARK_REL_FP)(unsigned short n, short dx, short dy);
typedef void (__stdcall *MARK_REL_FP)(short dx, short dy);
typedef void (__stdcall *N_MARK_REL_3D_FP)(unsigned short n, short dx, short dy, short dz);
typedef void (__stdcall *MARK_REL_3D_FP)(short dx, short dy, short dz);
typedef void (__stdcall *N_WRITE_8BIT_PORT_LIST_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_8BIT_PORT_LIST_FP)(unsigned short value);
typedef void (__stdcall *N_WRITE_DA_1_LIST_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_DA_1_LIST_FP)(unsigned short value);
typedef void (__stdcall *N_WRITE_DA_2_LIST_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_DA_2_LIST_FP)(unsigned short value);
typedef void (__stdcall *N_WRITE_DA_X_LIST_FP)(unsigned short n, unsigned short x, unsigned short value);
typedef void (__stdcall *WRITE_DA_X_LIST_FP)(unsigned short x, unsigned short value);
typedef void (__stdcall *N_SET_OFFSET_LIST_FP)(unsigned short n, short xoffset, short yoffset);
typedef void (__stdcall *SET_OFFSET_LIST_FP)(short xoffset, short yoffset);
typedef void (__stdcall *N_LONG_DELAY_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *LONG_DELAY_FP)(unsigned short value);
typedef void (__stdcall *N_LASER_ON_LIST_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *LASER_ON_LIST_FP)(unsigned short value);
typedef void (__stdcall *N_SET_JUMP_SPEED_FP)(unsigned short n, double speed);
typedef void (__stdcall *SET_JUMP_SPEED_FP)(double speed);
typedef void (__stdcall *N_SET_MARK_SPEED_FP)(unsigned short n, double speed);
typedef void (__stdcall *SET_MARK_SPEED_FP)(double speed);
typedef void (__stdcall *N_SET_LASER_DELAYS_FP)(unsigned short n, short ondelay, short offdelay);
typedef void (__stdcall *SET_LASER_DELAYS_FP)(short ondelay, short offdelay);
typedef void (__stdcall *N_SET_SCANNER_DELAYS_FP)(unsigned short n, unsigned short jumpdelay, unsigned short markdelay, unsigned short polydelay);
typedef void (__stdcall *SET_SCANNER_DELAYS_FP)(unsigned short jumpdelay, unsigned short markdelay, unsigned short polydelay);
typedef void (__stdcall *N_SET_LIST_JUMP_FP)(unsigned short n, long position);
typedef void (__stdcall *SET_LIST_JUMP_FP)(long position);
typedef void (__stdcall *N_LIST_CALL_FP)(unsigned short n, long position);
typedef void (__stdcall *LIST_CALL_FP)(long position);
typedef void (__stdcall *N_LIST_RETURN_FP)(unsigned short n);
typedef void (__stdcall *LIST_RETURN_FP)(void);
typedef void (__stdcall *N_Z_OUT_LIST_FP)(unsigned short n, short z);
typedef void (__stdcall *Z_OUT_LIST_FP)(short z);
typedef void (__stdcall *N_SET_STANDBY_LIST_FP)(unsigned short n, unsigned short half_period, unsigned short pulse);
typedef void (__stdcall *SET_STANDBY_LIST_FP)(unsigned short half_period, unsigned short pulse);
typedef void (__stdcall *N_TIMED_JUMP_ABS_FP)(unsigned short n, short x, short y, double time);
typedef void (__stdcall *TIMED_JUMP_ABS_FP)(short x, short y, double time);
typedef void (__stdcall *N_TIMED_MARK_ABS_FP)(unsigned short n, short x, short y, double time);
typedef void (__stdcall *TIMED_MARK_ABS_FP)(short x, short y, double time);
typedef void (__stdcall *N_TIMED_JUMP_REL_FP)(unsigned short n, short dx, short dy, double time);
typedef void (__stdcall *TIMED_JUMP_REL_FP)(short dx, short dy, double time);
typedef void (__stdcall *N_TIMED_MARK_REL_FP)(unsigned short n, short dx, short dy, double time);
typedef void (__stdcall *TIMED_MARK_REL_FP)(short dx, short dy, double time);
typedef void (__stdcall *N_SET_LASER_TIMING_FP)(unsigned short n, unsigned short halfperiod, unsigned short pulse1, unsigned short pulse2, unsigned short timebase);
typedef void (__stdcall *SET_LASER_TIMING_FP)(unsigned short halfperiod, unsigned short pulse1, unsigned short pulse2, unsigned short timebase);
typedef void (__stdcall *N_SET_WOBBEL_FP)(unsigned short n, unsigned short amplitude, double frequency);
typedef void (__stdcall *SET_WOBBEL_FP)(unsigned short amplitude, double frequency);
typedef void (__stdcall *N_SET_FLY_X_FP)(unsigned short n, double kx);
typedef void (__stdcall *SET_FLY_X_FP)(double kx);
typedef void (__stdcall *N_SET_FLY_Y_FP)(unsigned short n, double ky);
typedef void (__stdcall *SET_FLY_Y_FP)(double ky);
typedef void (__stdcall *N_WRITE_IO_PORT_LIST_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *WRITE_IO_PORT_LIST_FP)(unsigned short value);
typedef void (__stdcall *N_SET_WAIT_FP)(unsigned short n, unsigned short value);
typedef void (__stdcall *SET_WAIT_FP)(unsigned short value);
typedef void (__stdcall *N_SIMULATE_EXT_START_FP)(unsigned short n, short delay, short encoder);
typedef void (__stdcall *SIMULATE_EXT_START_FP)(short delay, short encoder);
typedef void (__stdcall *N_SET_PIXEL_LINE_FP)(unsigned short n, unsigned short pixelmode, unsigned short pixelperiod, double dx, double dy);
typedef void (__stdcall *SET_PIXEL_LINE_FP)(unsigned short pixelmode, unsigned short pixelperiod, double dx, double dy);
typedef void (__stdcall *N_SET_PIXEL_FP)(unsigned short n, unsigned short pulswidth, unsigned short davalue, unsigned short dummy);
typedef void (__stdcall *SET_PIXEL_FP)(unsigned short pulswidth, unsigned short davalue, unsigned short dummy);
typedef void (__stdcall *N_SET_EXTSTARTPOS_LIST_FP)(unsigned short n, long position);
typedef void (__stdcall *SET_EXTSTARTPOS_LIST_FP)(long position);
typedef void (__stdcall *N_LASER_SIGNAL_ON_LIST_FP)(unsigned short n);
typedef void (__stdcall *LASER_SIGNAL_ON_LIST_FP)(void);
typedef void (__stdcall *N_LASER_SIGNAL_OFF_LIST_FP)(unsigned short n);
typedef void (__stdcall *LASER_SIGNAL_OFF_LIST_FP)(void);
typedef void (__stdcall *N_SET_FIRSTPULSE_KILLER_LIST_FP)(unsigned short n, unsigned short fpk);
typedef void (__stdcall *SET_FIRSTPULSE_KILLER_LIST_FP)(unsigned short fpk);
typedef void (__stdcall *N_SET_IO_COND_LIST_FP)(unsigned short n, unsigned short mask_1, unsigned short mask_0, unsigned short mask_set);
typedef void (__stdcall *SET_IO_COND_LIST_FP)(unsigned short mask_1, unsigned short mask_0, unsigned short mask_set);
typedef void (__stdcall *N_CLEAR_IO_COND_LIST_FP)(unsigned short n, unsigned short mask_1, unsigned short mask_0, unsigned short mask_clear);
typedef void (__stdcall *CLEAR_IO_COND_LIST_FP)(unsigned short mask_1, unsigned short mask_0, unsigned short mask_clear);
typedef void (__stdcall *N_LIST_JUMP_COND_FP)(unsigned short n, unsigned short mask_1, unsigned short mask_0, long position);
typedef void (__stdcall *LIST_JUMP_COND_FP)(unsigned short mask_1, unsigned short mask_0, long position);
typedef void (__stdcall *N_LIST_CALL_COND_FP)(unsigned short n, unsigned short mask_1, unsigned short mask_0, long position);
typedef void (__stdcall *LIST_CALL_COND_FP)(unsigned short mask_1, unsigned short mask_0, long position);
typedef void (__stdcall *N_SAVE_AND_RESTART_TIMER_FP)(unsigned short n);
typedef void (__stdcall *SAVE_AND_RESTART_TIMER_FP)(void);
typedef void (__stdcall *N_SET_MATRIX_LIST_FP)(unsigned short n, unsigned short i, unsigned short j, double mij);
typedef void (__stdcall *SET_MATRIX_LIST_FP)(unsigned short i, unsigned short j, double mij);
typedef void (__stdcall *N_SET_CONTROL_MODE_LIST_FP)(unsigned short n, unsigned short mode);
typedef void (__stdcall *SET_CONTROL_MODE_LIST_FP)(unsigned short mode);
typedef void (__stdcall *N_SET_DEFOCUS_LIST_FP)(unsigned short n, short value);
typedef void (__stdcall *SET_DEFOCUS_LIST_FP)(short value);
typedef void (__stdcall *N_SET_EXT_START_DELAY_LIST_FP)(unsigned short n, short delay, short encoder);
typedef void (__stdcall *SET_EXT_START_DELAY_LIST_FP)(short delay, short encoder);
typedef void (__stdcall *N_SET_WOBBEL_XY_FP)(unsigned short n, unsigned short long_wob, unsigned short trans_wob, double frequency);
typedef void (__stdcall *SET_WOBBEL_XY_FP)(unsigned short long_wob, unsigned short trans_wob, double frequency);
typedef void (__stdcall *N_CALCULATE_FLY_FP)(unsigned short n, unsigned short direction, double distance);
typedef void (__stdcall *CALCULATE_FLY_FP)(unsigned short direction, double distance);
typedef void (__stdcall *N_SELECT_COR_TABLE_LIST_FP)(unsigned short n, unsigned short heada, unsigned short headb);
typedef void (__stdcall *SELECT_COR_TABLE_LIST_FP)(unsigned short heada, unsigned short headb);
typedef void (__stdcall *N_SET_FLY_ROT_FP)(unsigned short n, double resolution);
typedef void (__stdcall *SET_FLY_ROT_FP)(double resolution);
typedef void (__stdcall *N_FLY_RETURN_FP)(unsigned short n, short x, short y);
typedef void (__stdcall *FLY_RETURN_FP)(short x, short y);
typedef void (__stdcall *N_SET_TRIGGER_FP)(unsigned short n, unsigned short sampleperiod, unsigned short channel1, unsigned short channel2);
typedef void (__stdcall *SET_TRIGGER_FP)(unsigned short sampleperiod, unsigned short channel1, unsigned short channel2);
typedef void (__stdcall *N_ARC_REL_FP)(unsigned short n, short dx, short dy, double angle);
typedef void (__stdcall *ARC_REL_FP)(short dx, short dy, double angle);
typedef void (__stdcall *N_ARC_ABS_FP)(unsigned short n, short x, short y, double angle);
typedef void (__stdcall *ARC_ABS_FP)(short x, short y, double angle);
typedef void (__stdcall *N_TIME_FIX_FP)(unsigned short n);
typedef void (__stdcall *TIME_FIX_FP)(void);
typedef void (__stdcall *N_TIME_FIX_F_FP)(unsigned short n, unsigned short mode);
typedef void (__stdcall *TIME_FIX_F_FP)(unsigned short mode);
typedef void (__stdcall *N_MARK_TIME_FP)(unsigned short n, unsigned short part, unsigned short mode);
typedef void (__stdcall *MARK_TIME_FP)(unsigned short part, unsigned short mode);
typedef void (__stdcall *N_MARK_DATE_FP)(unsigned short n, unsigned short part, unsigned short mode);
typedef void (__stdcall *MARK_DATE_FP)(unsigned short part, unsigned short mode);
typedef void (__stdcall *N_MARK_SERIAL_FP)(unsigned short n, unsigned short mode, unsigned short digits);
typedef void (__stdcall *MARK_SERIAL_FP)(unsigned short mode, unsigned short digits);
typedef void (__stdcall *N_DATE_CHECK_FP)(unsigned short n, unsigned short month1, unsigned short month2, unsigned short month3);
typedef void (__stdcall *DATE_CHECK_FP)(unsigned short month1, unsigned short month2, unsigned short month3);
typedef void (__stdcall *N_FLYLINE_FP)(unsigned short n, short encoderdelay);
typedef void (__stdcall *FLYLINE_FP)(short encoderdelay);
typedef void (__stdcall *N_DRILLING_FP)(unsigned short n, short pulsewidth, short relencoderdelay);
typedef void (__stdcall *DRILLING_FP)(short pulsewidth, short relencoderdelay);
typedef void (__stdcall *N_REGULATION_FP)(unsigned short n);
typedef void (__stdcall *REGULATION_FP)(void);
typedef void (__stdcall *N_REGULATION2_FP)(unsigned short n, double fmax, double fmin);
typedef void (__stdcall *REGULATION2_FP)(double fmax, double fmin);
typedef void (__stdcall *N_STORE_ENCODER_FP)(unsigned short n);
typedef void (__stdcall *STORE_ENCODER_FP)(void);
typedef void (__stdcall *N_FLY_DISPLACEMENT_RET_FP)(unsigned short n, short x, short y);
typedef void (__stdcall *FLY_DISPLACEMENT_RET_FP)(short x, short y);
typedef long (__stdcall *USB_REINITIALIZE_FP)(long *foundcards);

extern SCANALONE_COUNT_CARDS_FP scanalone_count_cards;
extern SELECT_RTC_FP select_rtc;
extern N_USB_STATUS_FP n_usb_status;
extern USB_STATUS_FP usb_status;
extern N_LOAD_CORRECTION_FILE_FP n_load_correction_file;
extern LOAD_CORRECTION_FILE_FP load_correction_file;
extern N_LOAD_COR_FP n_load_cor;
extern LOAD_COR_FP load_cor;
extern N_LOAD_PROGRAM_FILE_FP n_load_program_file;
extern LOAD_PROGRAM_FILE_FP load_program_file;
extern N_LOAD_PRO_FP n_load_pro;
extern LOAD_PRO_FP load_pro;
extern N_LOAD_VARPOLYDELAY_FP n_load_varpolydelay;
extern LOAD_VARPOLYDELAY_FP load_varpolydelay;
extern N_LOAD_Z_TABLE_FP n_load_z_table;
extern LOAD_Z_TABLE_FP load_z_table;
extern N_GET_WAVEFORM_FP n_get_waveform;
extern GET_WAVEFORM_FP get_waveform;
extern N_GET_STATUS_FP n_get_status;
extern GET_STATUS_FP get_status;
extern N_READ_STATUS_FP n_read_status;
extern READ_STATUS_FP read_status;
extern GET_DLL_VERSION_FP get_dll_version;
extern N_GET_INPUT_POINTER_FP n_get_input_pointer;
extern GET_INPUT_POINTER_FP get_input_pointer;
extern N_SET_INPUT_POINTER_FP n_set_input_pointer;
extern SET_INPUT_POINTER_FP set_input_pointer;
extern N_SET_START_LIST_1_FP n_set_start_list_1;
extern SET_START_LIST_1_FP set_start_list_1;
extern N_SET_START_LIST_2_FP n_set_start_list_2;
extern SET_START_LIST_2_FP set_start_list_2;
extern N_SET_START_LIST_FP n_set_start_list;
extern SET_START_LIST_FP set_start_list;
extern N_EXECUTE_LIST_1_FP n_execute_list_1;
extern EXECUTE_LIST_1_FP execute_list_1;
extern N_EXECUTE_LIST_2_FP n_execute_list_2;
extern EXECUTE_LIST_2_FP execute_list_2;
extern N_EXECUTE_LIST_FP n_execute_list;
extern EXECUTE_LIST_FP execute_list;
extern N_WRITE_8BIT_PORT_FP n_write_8bit_port;
extern WRITE_8BIT_PORT_FP write_8bit_port;
extern N_WRITE_IO_PORT_FP n_write_io_port;
extern WRITE_IO_PORT_FP write_io_port;
extern N_AUTO_CHANGE_FP n_auto_change;
extern AUTO_CHANGE_FP auto_change;
extern N_AUT_CHANGE_FP n_aut_change;
extern AUT_CHANGE_FP aut_change;
extern N_START_LOOP_FP n_start_loop;
extern START_LOOP_FP start_loop;
extern N_QUIT_LOOP_FP n_quit_loop;
extern QUIT_LOOP_FP quit_loop;
extern N_STOP_EXECUTION_FP n_stop_execution;
extern STOP_EXECUTION_FP stop_execution;
extern N_DSP_START_FP n_dsp_start;
extern DSP_START_FP dsp_start;
extern N_READ_IO_PORT_FP n_read_io_port;
extern READ_IO_PORT_FP read_io_port;
extern N_WRITE_DA_1_FP n_write_da_1;
extern WRITE_DA_1_FP write_da_1;
extern N_WRITE_DA_2_FP n_write_da_2;
extern WRITE_DA_2_FP write_da_2;
extern N_WRITE_DA_X_FP n_write_da_x;
extern WRITE_DA_X_FP write_da_x;
extern N_SET_MAX_COUNTS_FP n_set_max_counts;
extern SET_MAX_COUNTS_FP set_max_counts;
extern N_GET_COUNTS_FP n_get_counts;
extern GET_COUNTS_FP get_counts;
extern N_SET_MATRIX_FP n_set_matrix;
extern SET_MATRIX_FP set_matrix;
extern N_SET_OFFSET_FP n_set_offset;
extern SET_OFFSET_FP set_offset;
extern N_GOTO_XY_FP n_goto_xy;
extern GOTO_XY_FP goto_xy;
extern N_GOTO_XYZ_FP n_goto_xyz;
extern GOTO_XYZ_FP goto_xyz;
extern N_GET_HEX_VERSION_FP n_get_hex_version;
extern GET_HEX_VERSION_FP get_hex_version;
extern N_ENABLE_LASER_FP n_enable_laser;
extern ENABLE_LASER_FP enable_laser;
extern N_DISABLE_LASER_FP n_disable_laser;
extern DISABLE_LASER_FP disable_laser;
extern N_STOP_LIST_FP n_stop_list;
extern STOP_LIST_FP stop_list;
extern N_RESTART_LIST_FP n_restart_list;
extern RESTART_LIST_FP restart_list;
extern N_GET_RTC_VERSION_FP n_get_rtc_version;
extern GET_RTC_VERSION_FP get_rtc_version;
extern N_GET_XY_POS_FP n_get_xy_pos;
extern GET_XY_POS_FP get_xy_pos;
extern N_GET_XYZ_POS_FP n_get_xyz_pos;
extern GET_XYZ_POS_FP get_xyz_pos;
extern N_SELECT_LIST_FP n_select_list;
extern SELECT_LIST_FP select_list;
extern N_SET_EXTSTARTPOS_FP n_set_extstartpos;
extern SET_EXTSTARTPOS_FP set_extstartpos;
extern N_Z_OUT_FP n_z_out;
extern Z_OUT_FP z_out;
extern N_SET_FIRSTPULSE_KILLER_FP n_set_firstpulse_killer;
extern SET_FIRSTPULSE_KILLER_FP set_firstpulse_killer;
extern N_SET_STANDBY_FP n_set_standby;
extern SET_STANDBY_FP set_standby;
extern N_LASER_SIGNAL_ON_FP n_laser_signal_on;
extern LASER_SIGNAL_ON_FP laser_signal_on;
extern N_LASER_SIGNAL_OFF_FP n_laser_signal_off;
extern LASER_SIGNAL_OFF_FP laser_signal_off;
extern N_SET_DELAY_MODE_FP n_set_delay_mode;
extern SET_DELAY_MODE_FP set_delay_mode;
extern N_SET_PISO_CONTROL_FP n_set_piso_control;
extern SET_PISO_CONTROL_FP set_piso_control;
extern N_SELECT_STATUS_FP n_select_status;
extern SELECT_STATUS_FP select_status;
extern N_GET_ENCODER_FP n_get_encoder;
extern GET_ENCODER_FP get_encoder;
extern N_SELECT_COR_TABLE_FP n_select_cor_table;
extern SELECT_COR_TABLE_FP select_cor_table;
extern N_EXECUTE_AT_POINTER_FP n_execute_at_pointer;
extern EXECUTE_AT_POINTER_FP execute_at_pointer;
extern N_GET_HEAD_STATUS_FP n_get_head_status;
extern GET_HEAD_STATUS_FP get_head_status;
extern N_SIMULATE_ENCODER_FP n_simulate_encoder;
extern SIMULATE_ENCODER_FP simulate_encoder;
extern N_RELEASE_WAIT_FP n_release_wait;
extern RELEASE_WAIT_FP release_wait;
extern N_GET_WAIT_STATUS_FP n_get_wait_status;
extern GET_WAIT_STATUS_FP get_wait_status;
extern N_SET_CONTROL_MODE_FP n_set_control_mode;
extern SET_CONTROL_MODE_FP set_control_mode;
extern N_SET_LASER_MODE_FP n_set_laser_mode;
extern SET_LASER_MODE_FP set_laser_mode;
extern N_SET_EXT_START_DELAY_FP n_set_ext_start_delay;
extern SET_EXT_START_DELAY_FP set_ext_start_delay;
extern N_HOME_POSITION_FP n_home_position;
extern HOME_POSITION_FP home_position;
extern N_READ_AD_X_FP n_read_ad_x;
extern READ_AD_X_FP read_ad_x;
extern N_GET_Z_DISTANCE_FP n_get_z_distance;
extern GET_Z_DISTANCE_FP get_z_distance;
extern N_GET_STARTSTOP_INFO_FP n_get_startstop_info;
extern GET_STARTSTOP_INFO_FP get_startstop_info;
extern N_GET_MARKING_INFO_FP n_get_marking_info;
extern GET_MARKING_INFO_FP get_marking_info;
extern N_GET_IO_STATUS_FP n_get_io_status;
extern GET_IO_STATUS_FP get_io_status;
extern N_GET_TIME_FP n_get_time;
extern GET_TIME_FP get_time;
extern N_SET_DEFOCUS_FP n_set_defocus;
extern SET_DEFOCUS_FP set_defocus;
extern N_SET_SOFTSTART_MODE_FP n_set_softstart_mode;
extern SET_SOFTSTART_MODE_FP set_softstart_mode;
extern N_SET_SOFTSTART_LEVEL_FP n_set_softstart_level;
extern SET_SOFTSTART_LEVEL_FP set_softstart_level;
extern N_CONTROL_COMMAND_FP n_control_command;
extern CONTROL_COMMAND_FP control_command;
extern N_SET_ROT_CENTER_FP n_set_rot_center;
extern SET_ROT_CENTER_FP set_rot_center;
extern N_AUTO_CHANGE_POS_FP n_auto_change_pos;
extern AUTO_CHANGE_POS_FP auto_change_pos;
extern N_GET_VALUE_FP n_get_value;
extern GET_VALUE_FP get_value;
extern N_SET_IO_BIT_FP n_set_io_bit;
extern SET_IO_BIT_FP set_io_bit;
extern N_CLEAR_IO_BIT_FP n_clear_io_bit;
extern CLEAR_IO_BIT_FP clear_io_bit;
extern N_SET_DUTY_CYCLE_TABLE_FP n_set_duty_cycle_table;
extern SET_DUTY_CYCLE_TABLE_FP set_duty_cycle_table;
extern N_STORE_ON_MMC_FP n_store_on_mmc;
extern STORE_ON_MMC_FP store_on_mmc;
extern N_GET_SERIAL_NUMBER_FP n_get_serial_number;
extern GET_SERIAL_NUMBER_FP get_serial_number;
extern N_GET_SERIAL_NUMBER_32_FP n_get_serial_number_32;
extern GET_SERIAL_NUMBER_32_FP get_serial_number_32;
extern N_MEASUREMENT_STATUS_FP n_measurement_status;
extern MEASUREMENT_STATUS_FP measurement_status;
extern N_CLEAR_LIST_FP n_clear_list;
extern CLEAR_LIST_FP clear_list;
extern N_SET_CHAR_TABLE_FP n_set_char_table;
extern SET_CHAR_TABLE_FP set_char_table;
extern N_TIME_UPDATE_FP n_time_update;
extern TIME_UPDATE_FP time_update;
extern N_SET_SERIAL_FP n_set_serial;
extern SET_SERIAL_FP set_serial;
extern N_MEMORY_TEST_FP n_memory_test;
extern MEMORY_TEST_FP memory_test;
extern N_LIST_NOP_FP n_list_nop;
extern LIST_NOP_FP list_nop;
extern N_SET_END_OF_LIST_FP n_set_end_of_list;
extern SET_END_OF_LIST_FP set_end_of_list;
extern N_JUMP_ABS_FP n_jump_abs;
extern JUMP_ABS_FP jump_abs;
extern N_JUMP_ABS_3D_FP n_jump_abs_3d;
extern JUMP_ABS_3D_FP jump_abs_3d;
extern N_MARK_ABS_FP n_mark_abs;
extern MARK_ABS_FP mark_abs;
extern N_MARK_ABS_3D_FP n_mark_abs_3d;
extern MARK_ABS_3D_FP mark_abs_3d;
extern N_JUMP_REL_FP n_jump_rel;
extern JUMP_REL_FP jump_rel;
extern N_JUMP_REL_3D_FP n_jump_rel_3d;
extern JUMP_REL_3D_FP jump_rel_3d;
extern N_MARK_REL_FP n_mark_rel;
extern MARK_REL_FP mark_rel;
extern N_MARK_REL_3D_FP n_mark_rel_3d;
extern MARK_REL_3D_FP mark_rel_3d;
extern N_WRITE_8BIT_PORT_LIST_FP n_write_8bit_port_list;
extern WRITE_8BIT_PORT_LIST_FP write_8bit_port_list;
extern N_WRITE_DA_1_LIST_FP n_write_da_1_list;
extern WRITE_DA_1_LIST_FP write_da_1_list;
extern N_WRITE_DA_2_LIST_FP n_write_da_2_list;
extern WRITE_DA_2_LIST_FP write_da_2_list;
extern N_WRITE_DA_X_LIST_FP n_write_da_x_list;
extern WRITE_DA_X_LIST_FP write_da_x_list;
extern N_SET_OFFSET_LIST_FP n_set_offset_list;
extern SET_OFFSET_LIST_FP set_offset_list;
extern N_LONG_DELAY_FP n_long_delay;
extern LONG_DELAY_FP long_delay;
extern N_LASER_ON_LIST_FP n_laser_on_list;
extern LASER_ON_LIST_FP laser_on_list;
extern N_SET_JUMP_SPEED_FP n_set_jump_speed;
extern SET_JUMP_SPEED_FP set_jump_speed;
extern N_SET_MARK_SPEED_FP n_set_mark_speed;
extern SET_MARK_SPEED_FP set_mark_speed;
extern N_SET_LASER_DELAYS_FP n_set_laser_delays;
extern SET_LASER_DELAYS_FP set_laser_delays;
extern N_SET_SCANNER_DELAYS_FP n_set_scanner_delays;
extern SET_SCANNER_DELAYS_FP set_scanner_delays;
extern N_SET_LIST_JUMP_FP n_set_list_jump;
extern SET_LIST_JUMP_FP set_list_jump;
extern N_LIST_CALL_FP n_list_call;
extern LIST_CALL_FP list_call;
extern N_LIST_RETURN_FP n_list_return;
extern LIST_RETURN_FP list_return;
extern N_Z_OUT_LIST_FP n_z_out_list;
extern Z_OUT_LIST_FP z_out_list;
extern N_SET_STANDBY_LIST_FP n_set_standby_list;
extern SET_STANDBY_LIST_FP set_standby_list;
extern N_TIMED_JUMP_ABS_FP n_timed_jump_abs;
extern TIMED_JUMP_ABS_FP timed_jump_abs;
extern N_TIMED_MARK_ABS_FP n_timed_mark_abs;
extern TIMED_MARK_ABS_FP timed_mark_abs;
extern N_TIMED_JUMP_REL_FP n_timed_jump_rel;
extern TIMED_JUMP_REL_FP timed_jump_rel;
extern N_TIMED_MARK_REL_FP n_timed_mark_rel;
extern TIMED_MARK_REL_FP timed_mark_rel;
extern N_SET_LASER_TIMING_FP n_set_laser_timing;
extern SET_LASER_TIMING_FP set_laser_timing;
extern N_SET_WOBBEL_FP n_set_wobbel;
extern SET_WOBBEL_FP set_wobbel;
extern N_SET_FLY_X_FP n_set_fly_x;
extern SET_FLY_X_FP set_fly_x;
extern N_SET_FLY_Y_FP n_set_fly_y;
extern SET_FLY_Y_FP set_fly_y;
extern N_WRITE_IO_PORT_LIST_FP n_write_io_port_list;
extern WRITE_IO_PORT_LIST_FP write_io_port_list;
extern N_SET_WAIT_FP n_set_wait;
extern SET_WAIT_FP set_wait;
extern N_SIMULATE_EXT_START_FP n_simulate_ext_start;
extern SIMULATE_EXT_START_FP simulate_ext_start;
extern N_SET_PIXEL_LINE_FP n_set_pixel_line;
extern SET_PIXEL_LINE_FP set_pixel_line;
extern N_SET_PIXEL_FP n_set_pixel;
extern SET_PIXEL_FP set_pixel;
extern N_SET_EXTSTARTPOS_LIST_FP n_set_extstartpos_list;
extern SET_EXTSTARTPOS_LIST_FP set_extstartpos_list;
extern N_LASER_SIGNAL_ON_LIST_FP n_laser_signal_on_list;
extern LASER_SIGNAL_ON_LIST_FP laser_signal_on_list;
extern N_LASER_SIGNAL_OFF_LIST_FP n_laser_signal_off_list;
extern LASER_SIGNAL_OFF_LIST_FP laser_signal_off_list;
extern N_SET_FIRSTPULSE_KILLER_LIST_FP n_set_firstpulse_killer_list;
extern SET_FIRSTPULSE_KILLER_LIST_FP set_firstpulse_killer_list;
extern N_SET_IO_COND_LIST_FP n_set_io_cond_list;
extern SET_IO_COND_LIST_FP set_io_cond_list;
extern N_CLEAR_IO_COND_LIST_FP n_clear_io_cond_list;
extern CLEAR_IO_COND_LIST_FP clear_io_cond_list;
extern N_LIST_JUMP_COND_FP n_list_jump_cond;
extern LIST_JUMP_COND_FP list_jump_cond;
extern N_LIST_CALL_COND_FP n_list_call_cond;
extern LIST_CALL_COND_FP list_call_cond;
extern N_SAVE_AND_RESTART_TIMER_FP n_save_and_restart_timer;
extern SAVE_AND_RESTART_TIMER_FP save_and_restart_timer;
extern N_SET_MATRIX_LIST_FP n_set_matrix_list;
extern SET_MATRIX_LIST_FP set_matrix_list;
extern N_SET_CONTROL_MODE_LIST_FP n_set_control_mode_list;
extern SET_CONTROL_MODE_LIST_FP set_control_mode_list;
extern N_SET_DEFOCUS_LIST_FP n_set_defocus_list;
extern SET_DEFOCUS_LIST_FP set_defocus_list;
extern N_SET_EXT_START_DELAY_LIST_FP n_set_ext_start_delay_list;
extern SET_EXT_START_DELAY_LIST_FP set_ext_start_delay_list;
extern N_SET_WOBBEL_XY_FP n_set_wobbel_xy;
extern SET_WOBBEL_XY_FP set_wobbel_xy;
extern N_CALCULATE_FLY_FP n_calculate_fly;
extern CALCULATE_FLY_FP calculate_fly;
extern N_SELECT_COR_TABLE_LIST_FP n_select_cor_table_list;
extern SELECT_COR_TABLE_LIST_FP select_cor_table_list;
extern N_SET_FLY_ROT_FP n_set_fly_rot;
extern SET_FLY_ROT_FP set_fly_rot;
extern N_FLY_RETURN_FP n_fly_return;
extern FLY_RETURN_FP fly_return;
extern N_SET_TRIGGER_FP n_set_trigger;
extern SET_TRIGGER_FP set_trigger;
extern N_ARC_REL_FP n_arc_rel;
extern ARC_REL_FP arc_rel;
extern N_ARC_ABS_FP n_arc_abs;
extern ARC_ABS_FP arc_abs;
extern N_TIME_FIX_FP n_time_fix;
extern TIME_FIX_FP time_fix;
extern N_TIME_FIX_F_FP n_time_fix_f;
extern TIME_FIX_F_FP time_fix_f;
extern N_MARK_TIME_FP n_mark_time;
extern MARK_TIME_FP mark_time;
extern N_MARK_DATE_FP n_mark_date;
extern MARK_DATE_FP mark_date;
extern N_MARK_SERIAL_FP n_mark_serial;
extern MARK_SERIAL_FP mark_serial;
extern N_DATE_CHECK_FP n_date_check;
extern DATE_CHECK_FP date_check;
extern N_FLYLINE_FP n_flyline;
extern FLYLINE_FP flyline;
extern N_DRILLING_FP n_drilling;
extern DRILLING_FP drilling;
extern N_REGULATION_FP n_regulation;
extern REGULATION_FP regulation;
extern N_REGULATION2_FP n_regulation2;
extern REGULATION2_FP regulation2;
extern N_STORE_ENCODER_FP n_store_encoder;
extern STORE_ENCODER_FP store_encoder;
extern N_FLY_DISPLACEMENT_RET_FP n_fly_displacement_ret;
extern FLY_DISPLACEMENT_RET_FP fly_displacement_ret;
extern USB_REINITIALIZE_FP usb_reinitialize;
